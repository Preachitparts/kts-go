rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read access for data needed by the booking form
    match /routes/{routeId} {
      allow read: if true;
      allow write: if request.auth != null; // Only admins can write
    }

    match /buses/{busId} {
      allow read: if true;
      allow write: if request.auth != null; // Only admins can write
    }
    
    match /referrals/{referralId} {
      allow read: if true;
      allow write: if request.auth != null; // Only admins can write
    }

    // Allow anyone to create a pending booking, which is then verified
    match /pending_bookings/{bookingId} {
      allow create: if true;
      // Server-side logic handles read/delete, so no client access needed for these
      allow read, delete: if request.auth != null;
    }
    
    // Allow reading a specific booking on the confirmation page without auth
    match /bookings/{bookingId} {
        allow read, write: if request.auth != null;
    }
    
    // Allow anyone to read their own booking confirmation
     match /bookings/{bookingId} {
        allow get: if true;
     }

    // Secure all other collections to be admin-only by default
    match /passengers/{document=**} {
      allow read, write: if request.auth != null;
    }
     match /rejected_bookings/{document=**} {
      allow read, write: if request.auth != null;
    }
     match /settings/{document=**} {
      allow read, write: if request.auth != null;
    }
     match /users/{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}