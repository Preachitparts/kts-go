rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read access for data needed by the booking form
    match /routes/{routeId} {
      allow read: if true;
      allow write: if request.auth != null; // Only admins can write
    }

    match /buses/{busId} {
      allow read: if true;
      allow write: if request.auth != null; // Only admins can write
    }
    
    match /referrals/{referralId} {
      allow read: if true;
      allow write: if request.auth != null; // Only admins can write
    }

    // Allow anyone to create a pending booking
    match /pending_bookings/{bookingId} {
      allow create: if true;
    }

    // Payment requests (client can create, server updates)
    match /payments/{paymentId} {
      // Anyone can create a payment request document
      allow create: if true;

      // Read only their own payment record
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;

      // Prevent client from overwriting payment status â€” only server can write/update
      allow update, delete: if request.auth.token.admin == true; // custom claim for admin
    }

    // Secure all other collections to be admin-only
    match /users/{userId} {
      allow read, write: if request.auth != null;
    }
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null;
    }
     match /passengers/{passengerId} {
      allow read, write: if request.auth != null;
    }
     match /approved_bookings/{bookingId} {
      allow read, write: if request.auth != null;
    }
      match /rejected_bookings/{bookingId} {
      allow read, write: if request.auth != null;
    }
     match /settings/{settingId} {
      allow read, write: if request.auth != null;
    }
  }
}