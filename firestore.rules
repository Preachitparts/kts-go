
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin' ||
              get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Super-Admin');
    }

    // Admins can write to any collection
    match /{document=**} {
      allow write: if isAdmin();
    }
    
    // Allow any authenticated user to read from any collection.
    // This is safe because the admin panel routes are protected by application logic.
    match /{document=**} {
      allow read: if request.auth != null;
    }
    
    // Allow unauthenticated users to read collections needed for the public booking form
    match /regions/{regionId} {
      allow get, list: if true;
    }
    match /routes/{routeId} {
      allow get, list: if true;
    }
    match /buses/{busId} {
      allow get, list: if true;
    }
    match /sessions/{sessionId} {
      allow get, list: if true;
    }
    match /referrals/{referralId} {
        allow get, list: if true;
    }

    // Allow anyone to create a pending booking
    match /pending_bookings/{bookingId} {
      allow create: if true;
    }
  }
}
